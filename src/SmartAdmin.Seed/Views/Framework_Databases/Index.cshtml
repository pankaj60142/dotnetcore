
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<section id="widget-grid" class="">
    <div id="modalFrameworkDatabase" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" class="modal fade text-left">
        <div role="document" class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">

                    <h4 id="_exampleModalLabel" class="modal-title">Database Detail Screen</h4>
                    <h4 id="PersonnelName" class="modal-title" style="color: red"></h4>
                    <button type="button" data-dismiss="modal" aria-label="Close" class="close"><span aria-hidden="true">Ã—</span></button>
                </div>
                <div class="modal-body">


                    <div class="widget-body no-padding">

                        <table id="tblDataBases" class="table table-striped table-bordered table-hover" width="100%">
                            <thead>
                                <tr>
                                    <th>Database Id</th>
                                    <th>Name</th> 
                                    <th>DBVersion</th>
                                    <th>ServicePack</th>
                                    <th>Dba</th>
                                    <th>Comments</th>
                                    <th>Document Name</th>
                                    
                                    <th>Edit</th>
                                    <th>Delete</th>
                                </tr>
                            </thead>
                        </table>
                    </div>


                </div>

            </div>
        </div>
    </div>

    <form id="frmdatabases">

        <div class="row">
            <div class="col-lg-12">


                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-1" data-widget-editbutton="false" data-widget-custombutton="false">
                    <!-- widget options:
                    usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                    data-widget-colorbutton="false"
                    data-widget-editbutton="false"
                    data-widget-togglebutton="false"
                    data-widget-deletebutton="false"
                    data-widget-fullscreenbutton="false"
                    data-widget-custombutton="false"
                    data-widget-collapsed="true"
                    data-widget-sortable="false"
                        \
                    -->
                    <header>
                        <span class="widget-icon">
                            <i class="fa fa-edit"></i>
                        </span>
                        <h2>Company Users </h2>

                    </header>

                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body no-padding">

                            <div id="company-user" class="smart-form">
                                @Html.AntiForgeryToken()
                                <fieldset>






                                    <div class="row">



                                        <section class="col col-6" id="country" >
                                            <label class="label">Country Name</label>

                                            <div class="input" id="countryid">


                                                <select name="countryname" id="countryname" style="width:100%" multiple></select>

                                            </div>
                                        </section>

                                        <section class="col col-6" id="state" >
                                            <label class="label">State Name</label>
                                            <div class="input">
                                                <i class="icon-append fa fa-exclamation-circle"></i>

                                                <select id="statename" name="statename" multiple></select>

                                            </div>
                                        </section>
                                    </div>

                                    <div class="row">
                                        <section class="col col-6" id="cities" >
                                            <label class="label">City Name</label>
                                            <div class="input">
                                                <i class="icon-append fa fa-exclamation-circle"></i>
                                                <select name="cityname" id="cityname" multiple></select>
                                                <!-- <input type="text" id="cityname" name="cityname" placeholder="City name" class="flexdatalist" data-min-length="1" multiple='multiple' data-value-property='CityId'>
                -->
                                                <b class="tooltip tooltip-bottom-right">Needed to enter the City name</b>
                                            </div>
                                        </section>



                                        <section class="col col-6" id="datacenter">
                                            <label class="label">Datacenters</label>
                                            <div class="input">
                                                <select name="datacentername" id="datacentername" multiple></select>




                                            </div>
                                        </section>
                                    </div>

                                    <div class="row">
                                        <section class="col col-6" id="department" >
                                            <label class="label">Departments</label>
                                            <div class="input">
                                                <select name="departmentname" id="departmentname" multiple></select>

                                                <!--<input type='text' id="departmentname" placeholder='Select Departments' class='flexdatalist' data-min-length='1' multiple='multiple' list='departments' name='deparments1'>
                -->

                                            </div>
                                        </section>



                                        <!--       <section class="col col-6" id="application" style="display:none">
               <label class="label">Applications </label>
               <div class="input">

                   <input type='text' id="applicationname" placeholder='Select Applications' class='flexdatalist' data-min-length='1' multiple='multiple' list='applications' name='datacenters1'>




               </div>
           </section>

        -->
                                    </div>



                                </fieldset>

                                @*<footer>
                                        <button type="button" class="btn btn-primary" onclick="SaveDatabase();">
                                            Save
                                        </button>
                                        <button type="button" class="btn btn-danger" onclick="ClearCity();">
                                            Cancel
                                        </button>
                                    </footer>*@
                            </div>

                        </div>
                        <!-- end widget content -->

                    </div>
                    <!-- end widget div -->

                </div>
                <!-- end widget -->




                <div class="jarviswidget jarviswidget-color-darken" id="wid-id-2" data-widget-editbutton="false">
                    <!-- widget options:
                    usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                    data-widget-colorbutton="false"
                    data-widget-editbutton="false"
                    data-widget-togglebutton="false"
                    data-widget-deletebutton="false"
                    data-widget-fullscreenbutton="false"
                    data-widget-custombutton="false"
                    data-widget-collapsed="true"
                    data-widget-sortable="false"

                    -->
                    <header>
                        <span class="widget-icon">
                            <i class="fa fa-database" s></i>
                        </span>
                        <h2>Databases  </h2>

                    </header>

                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body custom-scroll" id="Tree">

                            <ul id="myTab3" class="nav nav-tabs tabs-left bordered">
                                <li class="active">
                                    <a href="#l1" data-toggle="tab">Databases </a>
                                </li>

                                <li class="pull-left">
                                    <a href="#l2" data-toggle="tab">Database Document</a>
                                </li>

                            </ul>


                            <div id="myTabContent3" class="tab-content padding-10">
                                <div class="tab-pane fade in active" id="l1">


                                    <fieldset>
                                        <input name="authenticity_token" type="hidden">
                                        <div class="row" style="visibility: collapse">
                                            <div class="col-lg-2">
                                                <label><strong>DataBaseId</strong></label>
                                            </div>
                                            <div class="col-lg-10">
                                                <input type="text" id="DataBaseId" class="form-control" />
                                            </div>

                                        </div>

                                        <div class="col-lg-6">
                                            <div class="form-group">
                                                <label>Name</label>
                                                <input class="form-control" id="Name" name="Name" placeholder="Name" type="text">
                                            </div>
                                        </div>
                                        <div class="col-lg-6">
                                            <div class="form-group">
                                                <label>DB Type </label>

                                                <input class="form-control" id="DBTypeID" name="DBTypeID" placeholder="DB Type " type="text">

                                            </div>
                                        </div>
                                        <div class="col-lg-6">
                                            <div class="form-group">
                                                <label>DB Version</label>
                                                <input class="form-control" id="DBVersion" name="DBVersion" placeholder="DB Version" type="text">

                                            </div>
                                        </div>
                                        <div class="col-lg-6">
                                            <div class="form-group">
                                                <label>Installer Name </label>
                                                <input class="form-control" id="InstallerNameID" name="InstallerNameID" placeholder="Installer Name " type="text">

                                            </div>
                                        </div>
                                        <div class="col-lg-6">
                                            <div class="form-group">
                                                <label>Installed Date</label>
                                                <div class="input-group">
                                                    <input type="text" name="InstalledDate" id="InstalledDate" placeholder="Installed Date" class="form-control datepicker" data-dateformat="mm/dd/yy">
                                                    <span class="input-group-addon">
                                                        <i class="fa fa-calendar"></i>
                                                    </span>
                                                </div>

                                            </div>

                                        </div>

                                        <div class="col-lg-6">
                                            <div class="form-group">
                                                <label>Service Pack</label>
                                                <input class="form-control" name="ServicePack" id="ServicePack" placeholder="Service Pack" type="text">
                                            </div>
                                        </div>

                                        <div class="col-lg-6">



                                            <div class="select">
                                                <label>Dba</label>
                                                <select class="form-control" name="DbaID" id="DbaID"></select>
                                            </div>



                                        </div>





                                        @*<div class="col-lg-6">
            <label>Application Server</label>

            <select class="form-control" id="ApplicationServer">
                <option>No Server</option>



            </select>
        </div>*@


                                        <div class="col-lg-6">
                                            <div class="form-group">
                                                <label>Comment</label>
                                                <textarea class="form-control" id="Comment" name="Comment" placeholder="Comment" cols="3"></textarea>
                                            </div>
                                        </div>

                                        <div class="col-lg-6">
                                            <div class="form-group">
                                                <label>DB Technology</label>
                                                <textarea class="form-control" id="DBTechnology" name="DBTechnology" placeholder="DBTechnology" cols="3"></textarea>
                                            </div>
                                        </div>



                                    </fieldset>


                                </div>

                                <div class="tab-pane fade" id="l2">
                                    <div id="Frmdocuser" class="smart-form">
                                        <fieldset>

                                            <div class="col-lg-12">
                                                <div class="row">

                                                    <section class="col col-lg-12 col-md-12">
                                                        <label class="label">Database Document</label>
                                                        <div class="form-group">
                                                            <select class="form-control" id="DatabaseDocumentID"></select>
                                                        </div>
                                                    </section>
                                                </div>
                                            </div>

                                        </fieldset>
                                    </div>
                                </div>
                            </div>

                            <div class="form-actions">

                                <button type="button" onclick="SaveDatabase();" class="btn btn-primary btn-lg">   Save
                                </button>
                                <button type="button" id="SearchDataBase" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#modalFrameworkDatabase" onclick="FillDatabaseTable()">Search</button>
                            </div>


                        </div>
                    </div>
                </div>













            </div>
            <!-- end widget content -->

        </div>
        <!-- end widget div -->

    </form>
</section>

@section Scripts {
        <script src="~/js/plugin/bootstrapvalidator/bootstrapValidator.js"></script>
    <script type="text/javascript">




        pageSetUp();


      
        // pagefunction

        var pagefunction = function () {

            var responsiveHelper_dt_basic = undefined;


            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };
            // PAGE RELATED SCRIPTS

            var errorClass = 'invalid';
            var errorElement = 'em';




        };

        // end pagefunction

       




        $(document).ready(function () {
            $('#countryname').chosen();
            $('#countryname').chosen({ allow_single_deselect: false });
            $('#statename').chosen();
            $('#statename').chosen({ allow_single_deselect: false });
            $('#cityname').chosen();
            $('#cityname').chosen({ allow_single_deselect: false });
            $('#datacentername').chosen();
            $('#datacentername').chosen({ allow_single_deselect: false });
            $('#departmentname').chosen();
            $('#departmentname').chosen({ allow_single_deselect: false });
            fillcountry();
            //labelhide();
            $('#frmdatabases').bootstrapValidator({
                feedbackIcons: {
                    valid: 'glyphicon glyphicon-ok',
                    invalid: 'glyphicon glyphicon-remove',
                    validating: 'glyphicon glyphicon-refresh'
                },
                fields: {
                    Name: {

                        validators: {
                            notEmpty: {
                                message: 'Name is required'
                            },
                            stringLength: {
                                max: 200,
                                message: 'name be less than 200 characters long'
                            }
                        }
                    },

                    DBTypeID: {
                        // The group will be set as default (.form-group)
                        validators: {
                            notEmpty: {
                                message: 'Db type must be entered'
                            },
                            stringLength: {
                                max: 20,
                                message: 'DBType ID be less than 20 characters long'
                            }
                        }
                    },
                   
                    InstallerNameID: {
                        // The group will be set as default (.form-group)
                        validators: {
                            notEmpty: {
                                message: 'Installer Name must be entered'
                            }

                        }
                    }
                    
                }
            });
				// end movie form


            $("#InstalledDate").datepicker('setDate', 'today');
            Application_DBAID();
            Application_Database();


        });
        function labelhide() {
            document.getElementById('countrylabel').style.display = 'none';
            document.getElementById('citylabel').style.display = 'none';
            document.getElementById('departmentlabel').style.display = 'none';
            document.getElementById('datacenterlabel').style.display = 'none';
            document.getElementById('statelabel').style.display = 'none';
        }

         function Application_DBAID() {
            var options = {};
             options.url = "/Framework_Databases/frmserver_DBAID";
            options.type = "GET";
            var obj = {

            };

            options.data = JSON.stringify(obj);
            options.contentType = "application/json";
            options.dataType = "json";

            options.beforeSend = function (xhr) {
                xhr.setRequestHeader("MY-XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            };
             options.complete = function (msg) {

                 
                 for (var i = 0; i < msg.responseJSON.length; i++) {
                     //  var option = $('<option></option>').text(msg.responseJSON[i].CodeValue).val(msg.responseJSON[i].LookupID);
                     var option = $('<option></option>').text(msg.responseJSON[i].CodeValue).val(msg.responseJSON[i].LookupId);
                     $('#DbaID').append(option);

                 }


            };
            $.ajax(options);


        }
        function DeleteSelectedData(DatabaseID) {




            swal({
                title: "Are you sure?",
                text: "All associated cities will be deleted too,You will not be able to rollback this action!",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, delete it!",
                cancelButtonText: "No, cancel please!",
                closeOnConfirm: false,
                closeOnCancel: false
            },
                function (isConfirm) {

                    if (isConfirm) {

                        DeleteDataBase(DatabaseID);

                    } else {
                        swal("Cancelled", "You Cancelled delete operation!", "error");
                    }
                });




        }

        function DeleteDataBase(DatabaseID) {

            var SelectedDatabase = DatabaseID;






            var options = {};
            options.url = "/Framework_Databases/DeleteDataBase";
            options.type = "POST";

            var obj = {

                DataBaseId: SelectedDatabase

            };
 
            options.data = JSON.stringify(obj);
            options.contentType = "application/json";
            options.dataType = "json";

            options.beforeSend = function (xhr) {
                xhr.setRequestHeader("MY-XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            };
            options.complete = function (msg) {



                if (msg.responseText == "SUCCESS") {
                    swal("Deleted!", "State has been deleted!", "success");
                    FillAllCities();
                }
                else
                    swal("Error", "Error while deleting state!", "error");
            };

            $.ajax(options);
        }
       


        
        function Application_Database() {


            var options = {};
            options.url = "/Framework_Databases/DatabaseDocument";
            options.type = "GET";
            var obj = {

            };

            options.data = JSON.stringify(obj);
            options.contentType = "application/json";
            options.dataType = "json";

            options.beforeSend = function (xhr) {
                xhr.setRequestHeader("MY-XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            };
            options.complete = function (msg) {

                for (var i = 0; i < msg.responseJSON.length; i++) {
                    var option = $('<option></option>').text(msg.responseJSON[i].Name).val(msg.responseJSON[i].DocumentID);
                    $('#DatabaseDocumentID').append(option);


                }

            };
            $.ajax(options);


        }
        function SaveDatabase() {
          
            if ($("#frmdatabases").valid()) {
                var CountryName = $('#countryname').val();
                CountryName = parseInt(CountryName);
                if (CountryName == "" || CountryName == 0) {

                    // document.getElementById('countrylabel').style.display = 'visible';
                    document.getElementById('countrylabel').style.display = 'inherit';
                    
                }
                var StateName = $('#statename').val();
                StateName = parseInt(StateName);

                if (StateName == "" || StateName == 0) {

                    // document.getElementById('countrylabel').style.display = 'visible';
                    document.getElementById('statelabel').style.display = 'inherit';
                    
                }


                var CityName = $('#cityname').val();
                CityName = parseInt(CityName);

                if (CityName == "" || CityName == 0 ) {
                    
                
                    document.getElementById('citylabel').style.display = 'inherit';
                    return false;
                }
                
              
               
                
                var DatacenterName = $('#datacentername').val();
                DatacenterName = parseInt(DatacenterName);

                if (DatacenterName == "" || DatacenterName == 0) {
                    document.getElementById('datacenterlabel').style.display = 'inherit';
                    
                }


                var DepartmentName = $('#departmentname').val();
                DepartmentName = parseInt(DepartmentName);

                if (DepartmentName == "" || DepartmentName == 0) {
                    document.getElementById('departmentlabel').style.display = 'inherit';
                    return false;
                }
                var DatabaseId = $('#DataBaseId').val();
                DatabaseId = parseInt(DatabaseId);
                var selectedName = $('#Name').val();

                var selectedDbVersion = $('#DBVersion').val();
                var selectedServicePack = $('#ServicePack').val();
                var selectedComments = $('#Comment').val();
                var selectedDBTypeID = $('#DBTypeID').val();
                selectedDBTypeID = parseInt(selectedDBTypeID);
                if (isNaN(selectedDBTypeID)) {
                    swal("Error", "Db Type must be a number!", "error");
                    return false;
                }
                //if (selectedDBTypeID == null) {
                //    swal("Error", "Db type must be Entered!", "error");
                //    return false;
                //}
                //else (isNaN(selectedDBTypeID))
                //
                //    return false;

                var selectedDbaID = $('#DbaID').val();
                selectedDbaID = parseInt(selectedDbaID);

                var selectedInstallerNameID = $('#InstallerNameID').val();
                selectedInstallerNameID = parseInt(selectedInstallerNameID);
                if (isNaN(selectedInstallerNameID)) {
                    swal("Error", "Installer Name must be a number!", "error");
                   return false;
                }
                var selectedDatabaseDocumentID = $('#DatabaseDocumentID').val();
                selectedDatabaseDocumentID = parseInt(selectedDatabaseDocumentID);
              var InstalledDate = $('#InstalledDate').val();
                var selectedDBTechnology = $('#DBTechnology').val();

                if (DatabaseId == null || DatabaseId == "") {
                    DatabaseId = 0;
                }

                var options = {};
                options.url = "/Framework_Databases/SaveDatabase";
                options.type = "POST";
               

                var framework_databases = {

                   "databases": {
                //        "DatabaseID": DatabaseId,
        //"InstalledDate": InstalledDate,
                        
                        "DBVersion": selectedDbVersion,
                        "ServicePack": selectedServicePack,
                    "Comments": selectedComments,
                      "DBTypeID": selectedDBTypeID,
                        "InstallerNameID": selectedInstallerNameID,
                       "DbaID": selectedDbaID,
                        "DBTechnology": selectedDBTechnology
                 },

                  "document": {
                        "DocumentID": selectedDatabaseDocumentID,

                    },
                    "DatabaseLocation":{
                        "CityId": CityName,
                        "CountryId": CountryName,
                        "StateId": StateName,
                        "DepartmentId": DepartmentName,
                        "DataCenterId": DatacenterName,




                    }
                }

                options.data = JSON.stringify(framework_databases);
                options.contentType = "application/json";
                options.dataType = "json";



                options.beforeSend = function (xhr) {
                    xhr.setRequestHeader("MY-XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                };
                options.complete = function (msg) {
                    if (msg.responseText == "SUCCESS") {

                        swal("Saved!", "Framework Database saved successfully!", "success");
                        $('#Name').val(''); 
                        $('#DatabaseId').val('');
                        $('#DBVersion').val('');
                        $('#ServicePack').val('');
                        $('#Comment').val('');
                        $('#DBTypeID').val('');
                        $('#InstallerNameID').val('');
                        $('#DbaID').val('');
                        $('#DBTechnology').val('');
                        
                        
                        labelhide();
                       // FillCountry();

                    }
                    else
                        swal("Error", "Please fill in the required fields!", "error");
                };
                $.ajax(options);

            }
            else {
                swal("Error", "Error while saving Framework Database!", "error");
            }


        }
        function Editdata(DatabaseID) {
           // $("#countryname").val("Pakistan");

            $.ajax({
                url:rootUrl + '/Framework_Databases/EditData',
                type: 'POST',
                datatype: 'json',
                data: { DatabaseID: DatabaseID },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);


                },

                success: function (result) {
                    console.log(result);
                   
                    $("#DataBaseId").val(result[0].DatabaseID);
                    $("#InstallerNameID").val(result[0].InstallerNameID);
                    $("#DbaID").val(result[0].DbaId);
                    $("#DBVersion").val(result[0].DBVersion);
                    $("#InstalledDate").val(result[0].InstalledDate);
                    $("#Name").val(result[0].Name);
                    $("#ServicePack").val(result[0].ServicePack);
                    $("#DatabaseDocumentID").val(result[0].DocumentID);
                    $("#Comment").val(result[0].Comments);
                    $("#DBTypeID").val(result[0].DBTypeID);
                    //$("#cityname").val(result[0].CityId);
                    $("#countryname").val(result[0].CountryName, result[0].Latitude, result[0].Longitude, result[0].CountryId);
                    
                    //$("#statename").val(result[0].StateId);
                    //$("#departmentname").val(result[0].DepartmentId);
                    //$("#datacentername").val(result[0].DataCenterId);
                    
                    
                    
                    
                    

                    
                    $('#modalFrameworkDatabase').modal('hide');
                }

            });
        }
        function FillDatabaseTable() {
            $.ajax({
                url: "/Framework_Databases/GetDatabase",
                type: 'Get',
                datatype: 'json',
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);
                    Swal('Alert!', 'Unable to fill Data', 'error');
                },
                success: function (result) {

                    
                    

                    $('#tblDataBases').DataTable().destroy();
                     $('#tblDataBases').DataTable({
                        data: result,
                        paging: true,
                        scrollX: false,
                        autoWidth: false,
                        "iDisplayLength": 7,
                        columns: [
                            { data: 'DatabaseID' },
                            { data: 'DataBaseName' },
                          { data: 'DBVersion' },
                            { data: 'ServicePack' },
                            { data: 'CodeValue' },
                            { data: 'Comments' },
                            { data:'DocumentName'},
                           
                            {

                                "data": "DatabaseID",
                                "render": function (data, type, full, meta, oData) {
                                    return '<button type="button"  class="btn btn-primary" onclick="Editdata(\'' + data + '\');">Edit</button>';
                                }
                            },
                            {

                                "data": "DatabaseID",
                                "render": function (data, type, full, meta, oData) {
                                    return '<button type="button"  class="btn btn-danger" onclick="DeleteSelectedData(\'' + data + '\');">Delete</button>';
                                }
                            }

                        ],
                        
                        responsive: true


                    });
                }

            });
        }
       
        var rootDir = "@Url.Content("~/")";

        var selectedcountryid = -999;
        var selectedstateid = -999;
        var selectedcityid = -999;
        var selecteddatacenterid = -999;
        var selecteddepartmentid = -999;

       
        function fillcountry() {
            var compid = localStorage.getItem("companyid");
            compid = parseInt(compid);
            $.ajax({
                url:rootUrl + '/Department/GetCountry',
                type: 'POST',
                data: { compid: compid },
                datatype: 'json',
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);

                },

                success: function (resultCountry) {



                    for (var x = 0; x < resultCountry.length; x++) {


                        $('#countryname').append($('<option></option>').attr('value', resultCountry[x].CountryId).text(resultCountry[x].CountryName));


                    }
                    $('#countryname').trigger("chosen:updated");
                    $("#countryname").chosen().change(function (event) {

                        fillState($(event.target).val(), [], [], [], []);

                    });






                }


            });
        }
        function FillDataCenter(selectedcities, selecteddatacenters, SelectedDepartments) {
            SelectedCites = selectedcities.join(",");



            compid = localStorage.getItem("companyid");
            compid = parseInt(compid);


            $.ajax({
                url:rootUrl + '/Confirmation/GetDataCenterName',
                type: 'POST',
                datatype: 'json',
                data: { SelectedCites: SelectedCites, compid: compid },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);

                },

                success: function (resultdatacenter) {
                    Destroydatacenter();

                    for (var x = 0; x < resultdatacenter.length; x++) {


                        $('#datacentername').append($('<option></option>').attr('value', resultdatacenter[x].DataCenterId).text(resultdatacenter[x].DataCenterName));


                    }
                    $('#datacentername').trigger("chosen:updated");
                    $("#datacentername").chosen().change(function (event) {

                        FillDepartment($(event.target).val(), []);

                    });
                    if (SelectedDepartments.length == 0) {
                        $("#datacentername").val(selecteddatacenters).trigger("chosen:updated");

                    }
                    else {
                        $("#datacentername").val(selecteddatacenters).trigger("chosen:updated");
                        FillDepartment(selecteddatacenters, SelectedDepartments);
                    }



                }


            });

        }
        function FillDepartment(SelectedDataCenter, SelectedDepartments) {
            SelectedDataCenter = SelectedDataCenter.join(",");



            compid = localStorage.getItem("companyid");
            compid = parseInt(compid);


            $.ajax({
                url:rootUrl + '/Confirmation/GetDepartmentName',
                type: 'POST',
                datatype: 'json',
                data: { SelectedDataCenter: SelectedDataCenter, compid: compid },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);

                },

                success: function (resultdepartment) {
                    Destroydepartmentname();

                    for (var x = 0; x < resultdepartment.length; x++) {


                        $('#departmentname').append($('<option></option>').attr('value', resultdepartment[x].DepartmentId).text(resultdepartment[x].DepartmentName));


                    }
                    $('#departmentname').trigger("chosen:updated");

                    if (SelectedDepartments.length > 0) {
                        $("#departmentname").val(SelectedDepartments).trigger("chosen:updated");
                    }


                }


            });

        }
        function fillCity(SelectedStates, selectedcities, selecteddatacenters, SelectedDepartments) {
            SelectedStates = SelectedStates.join(",");
            var compid = localStorage.getItem("companyid");
            compid = parseInt(compid);




            $.ajax({
                url:rootUrl + '/Confirmation/GetCityName',
                type: 'POST',
                data: { SelectedStates: SelectedStates, compid: compid },
                datatype: 'json',
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);

                },

                success: function (resultCities) {
                    DestroyCityName();


                    for (var x = 0; x < resultCities.length; x++) {

                        $('#cityname').append($('<option></option>').attr('value', resultCities[x].CityId).text(resultCities[x].CityName));



                    }
                    $('#cityname').trigger("chosen:updated");

                    $("#cityname").chosen().change(function (event) {

                        FillDataCenter($(event.target).val(), [], []);

                    });
                    if (selecteddatacenters.length == 0) {
                        $("#cityname").val(SelectedCities).trigger("chosen:updated");

                    }
                    else {
                        $("#cityname").val(selectedcities).trigger("chosen:updated");
                        FillDataCenter(selectedcities, selecteddatacenters, SelectedDepartments);
                    }


                }



            });
        }
        function fillState(SelectedCountryIds, selectedstates, selectedcities, selecteddatacenters, SelectedDepartments) {
            SelectedCountryIds = SelectedCountryIds.join(",");

            compid = localStorage.getItem("companyid");
            compid = parseInt(compid);


            $.ajax({
                url:rootUrl + '/Confirmation/GetStateName',
                type: 'POST',
                datatype: 'json',

                data: { SelectedCountryIds1: SelectedCountryIds, compid: compid },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);

                },

                success: function (resultState) {
                    DestroyStatename();

                    for (var x = 0; x < resultState.length; x++) {


                        $('#statename').append($('<option></option>').attr('value', resultState[x].StateId).text(resultState[x].StateName));


                    }

                    $('#statename').trigger("chosen:updated");
                    $("#statename").chosen().change(function (event) {

                        fillCity($(event.target).val(), [], [], []);
                    });

                    if (selectedcities.length == 0) {
                        $("#statename").val(selectedstates).trigger("chosen:updated");

                    }
                    else {
                        $("#statename").val(selectedstates).trigger("chosen:updated");
                        fillCity(selectedstates, selectedcities, selecteddatacenters, SelectedDepartments);
                    }
                }


            });

        }

        function Destroycountryname() {
            $('#countryname')
                .empty();
        }

        function Destroydepartmentname() {
            $('#departmentname')
                .empty();
        }

        function DestroyCityName() {
            $('#cityname')
                .empty();
        }
        function DestroyStatename() {
            $('#statename')
                .empty();
        }

        function Destroydatacenter() {
            $('#datacentername')
                .empty();
        }
        function ClearDepartment(DepartmentId) {

        }


    </script>

}


