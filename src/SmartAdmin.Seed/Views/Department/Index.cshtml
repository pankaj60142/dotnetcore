
@{
    ViewData["Title"] = "Department";
}


<style type="text/css">
    .modal-header {
        background-color: #404040 !important;
        color: white;
    }

        .modal-header button.close {
            color: #ffffff !important;
        }

    .chosen-container {
        width: 100% !important;
    }
</style>



<div class="row">
    <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
        <h1 class="page-title txt-color-blueDark">

            <!-- PAGE HEADER -->
            <i class="fa-fw fa fa-pencil-square-o"></i>
            Forms
            <span>
                >
                Department
            </span>
        </h1>
    </div>
    <div class="col-3">
        <button class="btn btn-primary" type="button" style="margin:12px 12px 0 0; float:right;" data-toggle="modal" data-target="#openmodal">Add Department</button>
    </div>
    <div class="modal" id="openmodal" role="dialog">
        <div class="modal-dialog modal-lg">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <span>
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                    </span>
                    <span class="widget-icon">
                        <i class="fa fa-edit"></i>
                        Department
                    </span>

                </div>
                <div class="modal-body">
                    <div class="widget-body no-padding">

                        <form action="" id="frmdepartment" class="smart-form">
                            @Html.AntiForgeryToken()
                            <fieldset>
                                <div class="row">
                                    <section class="col col-6">

                                        <label class="label">Country Name</label>

                                        <label class="input">
                                            <select name="countryname" id="countryname" onchange="fillState(this)"></select>
                                            <b class="tooltip tooltip-bottom-right">Needed to enter the Country name</b>
                                        </label>
                                    </section>

                                    <section class="col col-6">
                                        <label class="label">State Name</label>

        
                                        <select id="StateName" name="StateName" onchange="fillcity()"></select>
                                        <b class="tooltip tooltip-bottom-right">Needed to enter the State name</b>
                                    </section>
                                </div>

                                <div class="row">
                                    <section class="col col-6">

                                        <label class="label">City Name</label>

                                        <label class="input">
                                            <select name="CityName" id="CityName" onchange="FillDataCenter()"></select>
                                            <b class="tooltip tooltip-bottom-right">Needed to enter the City Name</b>
                                        </label>
                                    </section>

                                    <section class="col col-6">

                                        <label class="label">Data Center Name</label>

                                        <label class="input">
                                            <select name="datacentername" id="datacentername"></select>
                                            <b class="tooltip tooltip-bottom-right">Needed to enter the Data Center Name</b>
                                        </label>
                                    </section>

                                </div>
                                <div class="row">
                                    <section class="col col-6">

                                        <label class="label">Department Name</label>

                                        <label class="input">
                                            <input name="departmentname" id="departmentname" />
                                           
                                            <b class="tooltip tooltip-bottom-right">Needed to enter the Data Department Name</b>
                                        </label>
                                    </section>

                                </div>


                            </fieldset>

                            <footer>
                                <button type="button" class="btn btn-primary" onclick="SaveDepartment();">
                                    Save
                                </button>
                                <button type="button" class="btn btn-danger" onclick="clearDepartment();">
                                    Cancel
                                </button>
                            </footer>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<!-- widget grid -->
<section id="widget-grid" class="">


    <!-- START ROW -->

    <div class="row">

        <!-- NEW COL START -->
        <article class="col-sm-12 col-md-12 col-lg-12">

            <!-- Widget ID (each widget will need unique ID)-->
            <!-- end widget -->
            <!-- Widget ID (each widget will need unique ID)-->
            <div class="jarviswidget jarviswidget-color-darken" id="wid-id-0" data-widget-editbutton="false">
                <!-- widget options:
                usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                data-widget-colorbutton="false"
                data-widget-editbutton="false"
                data-widget-togglebutton="false"
                data-widget-deletebutton="false"
                data-widget-fullscreenbutton="false"
                data-widget-custombutton="false"
                data-widget-collapsed="true"
                data-widget-sortable="false"

                -->
                <header>
                    <span class="widget-icon">
                        <i class="fa fa-table"></i>
                    </span>
                    <h2>Department </h2>

                </header>

                <!-- widget div-->
                <div>

                    <!-- widget edit box -->
                    <div class="jarviswidget-editbox">
                        <!-- This area used as dropdown edit box -->

                    </div>


                    <div class="widget-body no-padding">

                        <br />
                        <table id="tblDepartment" class="table table-striped table-bordered table-hover" width="100%">
                            <thead>
                                <tr>
                                    
                                    <th>Data Center Name</th>
                                    <th>Department Name</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                        </table>




                    </div>
                    <!-- end widget content -->

                </div>
                <!-- end widget div -->

            </div>
            <!-- end widget -->


        </article>
        <!-- END COL -->



    </div>

    <!-- END ROW -->

</section>
<!-- end widget grid -->
@section Scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            $('#countryname').chosen();
            $('#countryname').chosen({ allow_single_deselect: false });
            $('#StateName').chosen();
            $('#StateName').chosen({ allow_single_deselect: false });
            $('#CityName').chosen();
            $('#CityName').chosen({ allow_single_deselect: false });
            $('#datacentername').chosen();
            $('#datacentername').chosen({ allow_single_deselect: false });
            fillcountry();
            FillAllDepartment();
        });
        function DeleteSelecteddepartment(department) {




            swal({
                title: "Are you sure?",
                text: "All associated data centers will be deleted too,You will not be able to rollback this action!",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, delete it!",
                cancelButtonText: "No, cancel please!",
                closeOnConfirm: false,
                closeOnCancel: false
            },
                function (isConfirm) {

                    if (isConfirm) {

                        Deletedepartment(department);

                    } else {
                        swal("Cancelled", "You Cancelled delete operation!", "error");
                    }
                });




        }

        function Deletedepartment(department) {

            var selecteddepartment = department;
            selecteddepartment = parseInt(selecteddepartment);
            var options = {};
            options.url = "/Department/Deletedepartment";
            options.type = "POST";

            var obj = {

                DepartmentId: selecteddepartment

            };

            options.data = JSON.stringify(obj);
            options.contentType = "application/json";
            options.dataType = "json";

            options.beforeSend = function (xhr) {
                xhr.setRequestHeader("MY-XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            };
            options.complete = function (msg) {



                if (msg.responseText == "SUCCESS") {
                    swal("Deleted!", "Department has been deleted!", "success");
                    FillAllDepartment();
                }
                else
                    swal("Error", "Error while deleting Department !", "error");
            };

            $.ajax(options);
        }
        function SaveDepartment() {
            var compid = localStorage.getItem("companyid");
            compid = parseInt(compid);
            var datacentername = $('#datacentername').val();
            datacentername = parseInt(datacentername);
            var departmentname = $('#departmentname').val();

            if ($("#frmdepartment").valid()) {
                if (datacentername == null || datacentername == "") {
                    swal("Error", "DataCenter must be seleted!", "error");
                    return;
                }
               






                var options = {};
                options.url = "/Department/SaveDepartment";
                options.type = "POST";

                var obj = {
                    DepartmentName: departmentname,
                    DataCenterId: datacentername,
                    CompanyId: compid

                };

                options.data = JSON.stringify(obj);
                options.contentType = "application/json";
                options.dataType = "json";

                options.beforeSend = function (xhr) {
                    xhr.setRequestHeader("MY-XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                };
                options.complete = function (msg) {
                    if (msg.responseText == "SUCCESS") {
                        $('#departmentname').val('');
                        $('#openmodal').modal('hide');
                        FillAllDepartment();
                        DestroyCityName();
                        DestroyStatename();
                        Destroydatacenter();
                        swal("Saved!", "Department saved successfully!", "success");


                    }
                    else
                        swal("Error", "Error while saving Department!", "error");
                };

                $.ajax(options);
            }
            else {
                swal("Error", "Please fill in the required fields!", "error");
            }

        }
        function FillAllDepartment() {
            var compid = localStorage.getItem("companyid");
            $.ajax({
                url: rootUrl +'/Department/GetInsertedDepartment',
                type: 'POST',
                data: { compid: compid },
                datatype: 'json',
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);
                    Swal('Alert!', 'Unable to fill city', 'error');
                },
                success: function (result) {


                    $('#tblDepartment').DataTable().destroy();
                    $('#tblDepartment').DataTable({
                        data: result,
                        paging: true,
                        scrollX: false,
                        autoWidth: false,
                        "iDisplayLength": 7,
                        columns: [
                            { data: 'DataCenterName', 'width': '20%' },
                            { data: 'DepartmentName', 'width': '60%' },

                            {

                                "data": "DepartmentId",
                                "render": function (data, type, full, meta, oData) {
                                    return '<button type="button"  class="btn btn-danger" onclick="DeleteSelecteddepartment(\'' + data + '\');">Delete</button>';
                                }
                            }

                        ],



                        responsive: true


                    });
                }

            });

        }
        function fillcountry() {
            var compid = localStorage.getItem("companyid");
            compid = parseInt(compid);
            $.ajax({
                url:rootUrl +'/Department/GetCountry',
                type:'POST',
                data:{compid:compid},
                datatype: 'json',
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);

                },

                success: function (resultCountry) {

                    Destroycountryname();
                    for (var x = 0; x < resultCountry.length; x++) {


                        $('#countryname').append($('<option></option>').attr('value', resultCountry[x].CountryId).text(resultCountry[x].CountryName));


                    }
                    $('#countryname').trigger("chosen:updated");




                }


            });
        }
        function fillState(countrycode) {

            countrycode = $("#countryname").val();
            countrycode = parseInt(countrycode);


            compid = localStorage.getItem("companyid");
            compid = parseInt(compid);


            $.ajax({
                url: rootUrl +'/Department/GetStateName',
                type: 'POST',
                datatype: 'json',
                data: { countrycode: countrycode, compid: compid },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);

                },

                success: function (resultState) {
                    DestroyStatename();

                    for (var x = 0; x < resultState.length; x++) {


                        $('#StateName').append($('<option></option>').attr('value', resultState[x].StateId).text(resultState[x].StateName));


                    }
                    $('#StateName').trigger("chosen:updated");




                }


            });
        }
        function fillcity() {
            var compid = localStorage.getItem("companyid");
            compid = parseInt(compid);

            var StateId = $("#StateName").val();
            StateId = parseInt(StateId);


            $.ajax({
                url:rootUrl + '/Department/GetCities',
                type: 'POST',
                data: { StateId: StateId, compid: compid },
                datatype: 'json',
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);

                },

                success: function (resultCities) {
                    DestroyCityName();


                    for (var x = 0; x < resultCities.length; x++) {

                        $('#CityName').append($('<option></option>').attr('value', resultCities[x].CityId).text(resultCities[x].CityName));



                    }
                    $('#CityName').trigger("chosen:updated");




                }


            });
        }
        function DestroyCityName() {
            $('#CityName')
                .empty()
                .append('<option selected="selected" value="">Select City</option>');
        }
        function Destroydatacenter() {
            $('#datacentername')
                .empty()
                .append('<option selected="selected" value="">Select Data Center</option>');
        }
        function DestroyStatename() {
            $('#StateName')
                .empty()
                .append('<option selected="selected" value="">Select State</option>');
        }
        function Destroycountryname() {
            $('#countryname')
                .empty()
                .append('<option selected="selected" value="">Select Country</option>');
        }
        function FillDataCenter() {
            CityName = $("#CityName").val();
            CityName = parseInt(CityName);


            compid = localStorage.getItem("companyid");
            compid = parseInt(compid);


            $.ajax({
                url:rootUrl + '/Department/GetDataCenter',
                type: 'POST',
                datatype: 'json',
                data: { CityName: CityName, compid: compid },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);

                },

                success: function (resultdatacenter) {
                    Destroydatacenter();

                    for (var x = 0; x < resultdatacenter.length; x++) {


                        $('#datacentername').append($('<option></option>').attr('value', resultdatacenter[x].DataCenterId).text(resultdatacenter[x].DataCenterName));


                    }
                    $('#datacentername').trigger("chosen:updated");




                }


            });

        }
    </script>
}
