<div class="row">
    <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
        <h1 class="page-title txt-color-blueDark">
            <i class="fa fa-pencil-square-o fa-fw "></i>
            Forms
            <span>
                >
                Import Settings
            </span>
        </h1>
    </div>

</div>



<!-- widget grid -->
<section id="widget-grid" class="">

    <!-- row -->
    <div class="row">

        <!-- NEW WIDGET START -->
        <article class="col-sm-12">


            <!-- Widget ID (each widget will need unique ID)-->
            <div class="jarviswidget jarviswidget-color-blueLight" id="wid-id-0" data-widget-editbutton="false">
                <!-- widget options:
                usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                data-widget-colorbutton="false"
                data-widget-editbutton="false"
                data-widget-togglebutton="false"
                data-widget-deletebutton="false"
                data-widget-fullscreenbutton="false"
                data-widget-custombutton="false"
                data-widget-collapsed="true"
                data-widget-sortable="false"

                -->
                <header>
                    <span class="widget-icon">
                        <i class="fa fa-cloud"></i>
                    </span>
                    <h2>Upload your files here ! </h2>

                </header>

                <!-- widget div-->
                <div>

                    <!-- widget edit box -->
                    <div class="jarviswidget-editbox">
                        <!-- This area used as dropdown edit box -->

                    </div>
                    <!-- end widget edit box -->
                    <!-- widget content -->
                    <div class="widget-body">
                        <div class="row text-right">
                            <button class="btn btn-primary btn-lg" type="submit" onclick="FileBrowse()">Import Data</button>
                        </div>
                        <form action="" class="smart-form">

                         
                            <section>

                               <h2>Total Rows: @ViewData.ModelState.Values.Count().ToString()</h2>
                                @*<table>

                                    @foreach (var item in ViewContext.ViewData.ModelState)
                                    {

                                        if (item.Value.Errors.Any())
                                        {
                                            
                                            <tr>
                                                <td><b>@item.Key</b></td>
                                                <td>@((item.Value == null || item.Value == null) ? "<null>" : item.Value.RawValue)</td>
                                                <td>@(string.Join("; ", item.Value.Errors.Select(x => x.ErrorMessage)))</td>
                                            </tr>
                                        }
                                    }
                                </table>*@


                               

                                <div style="color:red"></div>
                                <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>


                            </section>
                            <section>


                                <label class="label">File input</label>
                                <label for="file" class="input input-file">
                                    <div class="button"><input type="file" name="file" id="csvimport" onchange="this.parentNode.nextSibling.value = this.value">Browse</div><input type="text" placeholder="Include some files" readonly="">


                                </label>
                            </section>

                        </form>

                    </div>
                    <!-- end widget content -->

                </div>
                <!-- end widget div -->

            </div>
            <!-- end widget -->


            <p class="alert alert-warning">
                <i class="fa fa-warning fa-fw fa-lg"></i><strong>Opps!</strong>
                You may get an error during the upload for this demo. The error will subside once the backend portion is properly configured.
            </p>




            <div class="jarviswidget jarviswidget-color-darken" id="wid-id-0" data-widget-editbutton="false">
                <!-- widget options:
                usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                data-widget-colorbutton="false"
                data-widget-editbutton="false"
                data-widget-togglebutton="false"
                data-widget-deletebutton="false"
                data-widget-fullscreenbutton="false"
                data-widget-custombutton="false"
                data-widget-collapsed="true"
                data-widget-sortable="false"

                -->
                <header>
                    <span class="widget-icon">
                        <i class="fa fa-table"></i>
                    </span>
                    <h2>Data Centers </h2>

                </header>

                <!-- widget div-->
                <div>

                    <!-- widget edit box -->
                    <div class="jarviswidget-editbox">
                        <!-- This area used as dropdown edit box -->

                    </div>


                    <div class="widget-body no-padding">

                        <br />
                        <table id="tblUploadedData" class="table table-striped table-bordered table-hover" width="100%">
                            <thead>
                                <tr>
                                    <th>Country Code</th>
                                    <th>Country Name</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                        </table>




                    </div>
                    <!-- end widget content -->

                </div>
                <!-- end widget div -->

            </div>

        </article>
        <!-- WIDGET END -->

    </div>

    <!-- end row -->
    <!-- row -->
    <!-- end row -->

</section>
<!-- end widget grid -->
@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script type="text/javascript">
        runAllForms();
        /* DO NOT REMOVE : GLOBAL FUNCTIONS!
     *
     * pageSetUp(); WILL CALL THE FOLLOWING FUNCTIONS
     *
     * // activate tooltips
     * $("[rel=tooltip]").tooltip();
     *
     * // activate popovers
     * $("[rel=popover]").popover();
     *
     * // activate popovers with hover states
     * $("[rel=popover-hover]").popover({ trigger: "hover" });
     *
     * // activate inline charts
     * runAllCharts();
     *
     * // setup widgets
     * setup_widgets_desktop();
     *
     * // run form elements
     * runAllForms();
     *
     ********************************
     *
     * pageSetUp() is needed whenever you load a page.
     * It initializes and checks for all basic elements of the page
     * and makes rendering easier.
     *
     */

        pageSetUp();

        /*
         * ALL PAGE RELATED SCRIPTS CAN GO BELOW HERE
         * eg alert("my home function");
         *
         * var pagefunction = function() {
         *   ...
         * }
         * loadScript("/js/plugin/_PLUGIN_NAME_.js", pagefunction);
         *
         */

        // PAGE RELATED SCRIPTS

        // pagefunction

        var pagefunction = function () {

       

        };

        function FileBrowse() {
            var formData = new FormData();
            formData.append('file', $('#csvimport')[0].files[0]); // myFile is the input type="file" control
            
            var _url =  rootUrl+'/ImportSettings/UploadFile';
            var compid = localStorage.getItem("companyid");
            formData.append('CompanyId', compid);
            $.ajax({
                url: _url,
                type: 'POST',
                data: formData,
                processData: false,  // tell jQuery not to process the data
                contentType: false,
    dataType : "JSON",
                success: function (result) {

                  

                },
                error: function (jqXHR, textStatus, errorThrown, responseText) {
                   if (jqXHR.responseText == "success")
                            swal("Imported!", "All settings imported successfully!", "success");
                            
                        else
                        swal("Not Imported!", jqXHR.responseText, "error");
                    
                    
    },
                complete: function (jqXHR, result) {
                 
                }
            });
        }



    </script>
}
